/*
 * Generated by MyEclipse Struts
 * Template path: templates/java/JavaClass.vtl
 */
package com.myhotel.struts.action;

import java.text.SimpleDateFormat;
import java.util.Calendar;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import org.apache.struts.action.Action;
import org.apache.struts.action.ActionForm;
import org.apache.struts.action.ActionForward;
import org.apache.struts.action.ActionMapping;
import org.hibernate.Session;
import org.hibernate.Transaction;

import cn.myhotel.model.Client;
import cn.myhotel.model.Order1;
import cn.myhotel.model.Order1DAO;
import cn.myhotel.model.Room;

/** 
 * MyEclipse Struts
 * 
 * XDoclet definition:
 * @struts.action validate="true"
 * @struts.action-forward name="success" path="/templates/message.jsp"
 */
public class CreatorderAction extends Action {
	/*
	 * Generated Methods
	 */

	/** 
	 * Method execute
	 * @param mapping
	 * @param form
	 * @param request
	 * @param response
	 * @return ActionForward
	 */
	public ActionForward execute(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {
		// TODO Auto-generated method stub
		String[] roomId = request.getParameterValues("roomId");
		String[] datenum = request.getParameterValues("datenum");
		Client client = (Client)request.getSession().getAttribute("user");
		Order1DAO dao = new Order1DAO();
		Session session = dao.getSession();
		boolean passed = false;
		try{
			Transaction tx = session.beginTransaction();
			for(int i=0;i<roomId.length;i++)
			{
				Order1 order1 = new Order1();
				order1.setClient(client);
				Room room = (Room)session.load(Room.class, Long.valueOf(roomId[i]));
				order1.setRoom(room);
				order1.setDatenum(Integer.valueOf(datenum[i]));
				order1.setPrice(room.getRoomtype().getPrice());
				order1.setIsused("0");
				order1.setDone("0");
				SimpleDateFormat df = new SimpleDateFormat("yyyy-MM-dd HH:mm:ss");
				String regdate = new SimpleDateFormat("yyyy-MM-dd HH:mm:ss").format(Calendar.getInstance().getTime());
				try{
					order1.setRegdate(df.parse(regdate));
				}catch(Exception e){
					e.printStackTrace();
				}
				session.save(order1);
				room.setIsused("1");
				session.update(room);
			}
			tx.commit();
			passed = true;
			request.getSession().setAttribute("car", null);
		}catch(Exception e){
			passed = false;
			e.printStackTrace();
		}finally{
        	session.close();
        }
		
		String mlink = "../client/orderlist.do";
		String msg = "";
		if(passed)
			msg = "提交数据成功！";
		else
			msg = "提交数据失败！";
		request.setAttribute("msg", msg);
		request.setAttribute("mlink", mlink);
		return mapping.findForward("success");
	}
}