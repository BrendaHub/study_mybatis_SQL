/*
 * Generated by MyEclipse Struts
 * Template path: templates/java/JavaClass.vtl
 */
package com.myhotel.struts.action;

import java.util.List;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import org.apache.struts.Globals;
import org.apache.struts.action.Action;
import org.apache.struts.action.ActionForm;
import org.apache.struts.action.ActionForward;
import org.apache.struts.action.ActionMapping;
import org.apache.struts.action.ActionMessage;
import org.apache.struts.action.ActionMessages;
import org.hibernate.Session;
import org.hibernate.Transaction;

import cn.myhotel.model.Badman;
import cn.myhotel.model.BadmanDAO;
import cn.myhotel.model.Client;

import com.myhotel.struts.form.AddbadmanForm;

/** 
 * MyEclipse Struts
 * 
 * XDoclet definition:
 * @struts.action path="/admin/addbadman" name="addbadmanForm" input="/admin/addbadman.jsp" scope="request" validate="true"
 * @struts.action-forward name="success" path="/templates/message.jsp"
 */
public class AddbadmanAction extends Action {
	/*
	 * Generated Methods
	 */

	/** 
	 * Method execute
	 * @param mapping
	 * @param form
	 * @param request
	 * @param response
	 * @return ActionForward
	 */
	public ActionForward execute(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {
		AddbadmanForm addbadmanForm = (AddbadmanForm) form;// TODO Auto-generated method stub
		BadmanDAO dao = new BadmanDAO();
		Badman badman = new Badman();
		String mlink = "";
		String msg = "";
		if(request.getAttribute("badman")!=null)
		{
			badman = (Badman)request.getAttribute("badman");
			mlink = "../admin/addbadman.jsp?id="+badman.getId();
		}
		else
			mlink = "../admin/addbadman.jsp";
		
		badman.setName(addbadmanForm.getName());
		badman.setSex(addbadmanForm.getSex());
		badman.setCardno(addbadmanForm.getCardno());
		List alist = dao.getSession().createQuery("from Badman where cardno = '"+addbadmanForm.getCardno()+"'").list();
		if(alist.size()>0)
		{
			ActionMessages messages = this.getMessages(request);
			messages.add(Globals.ERROR_KEY,new ActionMessage("badman.addfailed"));
			this.addErrors(request, messages);
			dao.closeSession();
			return mapping.getInputForward();
		}
		
		Session session = dao.getSession();
		boolean passed = false;
		try{
			Transaction tx = session.beginTransaction();
			session.saveOrUpdate(badman);
			List list = session.createQuery("from Client where cardno = '"+addbadmanForm.getCardno()+"'").list();
			if(list.size()>0)
			{
				Client client = (Client)list.get(0);
				client.setIsbad("1");
				session.update(client);
			}
			tx.commit();
			passed = true;
		}catch(Exception e){
			passed = false;
			e.printStackTrace();
		}finally{
			session.close();
		}
		
		if(passed)
			msg = "保存数据成功！";
		else
			msg = "保存数据失败！";
		request.setAttribute("msg", msg);
		request.setAttribute("mlink", mlink);
		return mapping.findForward("success");
	}
}