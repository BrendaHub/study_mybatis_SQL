/*
 * Generated by MyEclipse Struts
 * Template path: templates/java/JavaClass.vtl
 */
package com.myhotel.struts.action;

import java.text.SimpleDateFormat;
import java.util.Calendar;
import java.util.List;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import org.apache.commons.beanutils.BeanUtils;
import org.apache.struts.Globals;
import org.apache.struts.action.Action;
import org.apache.struts.action.ActionForm;
import org.apache.struts.action.ActionForward;
import org.apache.struts.action.ActionMapping;
import org.apache.struts.action.ActionMessage;
import org.apache.struts.action.ActionMessages;

import cn.myhotel.model.Client;
import cn.myhotel.model.ClientDAO;

import com.myhotel.struts.form.AddclientForm;

/** 
 * MyEclipse Struts
 * 
 * XDoclet definition:
 * @struts.action path="/zhuce" name="addclientForm" input="/zhuce.jsp" scope="request" validate="true"
 * @struts.action-forward name="success" path="/templates/message.jsp"
 */
public class ZhuceAction extends Action {
	/*
	 * Generated Methods
	 */

	/** 
	 * Method execute
	 * @param mapping
	 * @param form
	 * @param request
	 * @param response
	 * @return ActionForward
	 */
	public ActionForward execute(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {
		AddclientForm addclientForm = (AddclientForm) form;// TODO Auto-generated method stub
		ClientDAO dao = new ClientDAO();
		ActionMessages messages = this.getMessages(request);
		if(!addclientForm.getPassword().equals(addclientForm.getRpassword()))
		{
			messages.add(Globals.ERROR_KEY,new ActionMessage("client.addpwd"));
			this.addErrors(request, messages);
			dao.closeSession();
			return mapping.getInputForward();
		}
		List list = dao.findByClientId(addclientForm.getClientId());
		if(list.size()>0)
		{
			messages.add(Globals.ERROR_KEY,new ActionMessage("client.addclientId"));
			this.addErrors(request, messages);
			dao.closeSession();
			return mapping.getInputForward();
		}
		list = dao.findByCardno(addclientForm.getCardno());
		if(list.size()>0)
		{
			messages.add(Globals.ERROR_KEY,new ActionMessage("client.addcardno"));
			this.addErrors(request, messages);
			dao.closeSession();
			return mapping.getInputForward();
		}
		list = dao.getSession().createQuery("from Badman where cardno = '"+addclientForm.getCardno()+"'").list();
		if(list.size()>0)
		{
			messages.add(Globals.ERROR_KEY,new ActionMessage("client.addbad"));
			this.addErrors(request, messages);
			dao.closeSession();
			return mapping.getInputForward();
		}
		Client client = new Client();
		try{
			BeanUtils.copyProperties(client,addclientForm);
		}catch(Exception e){
			e.printStackTrace();
		}
		SimpleDateFormat df = new SimpleDateFormat("yyyy-MM-dd");
		String regdate = new SimpleDateFormat("yyyy-MM-dd HH:mm:ss").format(Calendar.getInstance().getTime());
		try{
			client.setBirth(df.parse(addclientForm.getDate1()));
			client.setRegdate(df.parse(regdate));
		}catch(Exception e){
			e.printStackTrace();
		}
		client.setIsbad("0");
		client.setIsused("0");
		client.setType("client");
		String mlink = "mainframe.html";
		String msg = "";
		if(dao.attachDirty(client))
		{
			msg = "×¢²á³É¹¦£¡";
			request.getSession().setAttribute("user", client);
		}
		else
		{
			msg = "×¢²áÊ§°Ü£¡";
			dao.closeSession();
			return mapping.getInputForward();
		}
		dao.closeSession();
		request.setAttribute("msg", msg);
		request.setAttribute("mlink", mlink);
		return mapping.findForward("success");
	}
}